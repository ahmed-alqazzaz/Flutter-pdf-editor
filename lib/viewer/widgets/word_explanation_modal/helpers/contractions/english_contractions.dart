import 'package:flutter/foundation.dart';
import 'package:tuple/tuple.dart';

@immutable
class EnglishContractions {
  const EnglishContractions();
  // THIS MAP IS GENERATED BY CHATGPT
  // AND MIGHT NOT CONTAIN ALL THE CONTRACTIONS
  static const _contractions = <String, Tuple2<List<String>, List<String>>>{
    "ain't": Tuple2(['is', 'are', 'was', 'be'], ['not']),
    "aren't": Tuple2(['are'], ['not']),
    "could've": Tuple2(['could'], ['have']),
    "couldn't": Tuple2(['could'], ['not']),
    "didn't": Tuple2(['did'], ['not']),
    "doesn't": Tuple2(['does'], ['not']),
    "don't": Tuple2(['do'], ['not']),
    "hadn't": Tuple2(['had'], ['not']),
    "hasn't": Tuple2(['has'], ['not']),
    "haven't": Tuple2(['have'], ['not']),
    "he'd": Tuple2(['he'], ['had', 'would']),
    "he'll": Tuple2(['he'], ['will', 'shall']),
    "he's": Tuple2(['he'], ['is']),
    "how'd": Tuple2(['how'], ['did', 'would']),
    "how'll": Tuple2(['how'], ['will', 'shall']),
    "how's": Tuple2(['how'], ['is']),
    "I'd": Tuple2(['I'], ['had', 'would']),
    "I'll": Tuple2(['I'], ['will', 'shall']),
    "I'm": Tuple2(['I'], ['am']),
    "I've": Tuple2(['I'], ['have']),
    "isn't": Tuple2(['is'], ['not']),
    "it'd": Tuple2(['it'], ['had', 'would']),
    "it'll": Tuple2(['it'], ['will', 'shall']),
    "it's": Tuple2(['it'], ['is']),
    "might've": Tuple2(['might'], ['have']),
    "mightn't": Tuple2(['might'], ['not']),
    "must've": Tuple2(['must'], ['have']),
    "mustn't": Tuple2(['must'], ['not']),
    "needn't": Tuple2(['need'], ['not']),
    "oughtn't": Tuple2(['ought'], ['not']),
    "shan't": Tuple2(['shall'], ['not']),
    "she'd": Tuple2(['she'], ['had', 'would']),
    "she'll": Tuple2(['she'], ['will', 'shall']),
    "she's": Tuple2(['she'], ['is']),
    "should've": Tuple2(['should'], ['have']),
    "shouldn't": Tuple2(['should'], ['not']),
    "that'll": Tuple2(['that'], ['will', 'shall']),
    "that's": Tuple2(['that'], ['is']),
    "there'd": Tuple2(['there'], ['had', 'would']),
    "there'll": Tuple2(['there'], ['will', 'shall']),
    "there's": Tuple2(['there'], ['is']),
    "they'd": Tuple2(['they'], ['had', 'would']),
    "they'll": Tuple2(['they'], ['will', 'shall']),
    "they're": Tuple2(['they'], ['are']),
    "they've": Tuple2(['they'], ['have']),
    "wasn't": Tuple2(['was'], ['not']),
    "we'd": Tuple2(['we'], ['had', 'would']),
    "we'll": Tuple2(['we'], ['will', 'shall']),
    "we're": Tuple2(['we'], ['are']),
    "we've": Tuple2(['we'], ['have']),
    "weren't": Tuple2(['were'], ['not']),
    "what'd": Tuple2(['what'], ['did', 'would']),
    "what'll": Tuple2(['what'], ['will', 'shall']),
    "what's": Tuple2(['what'], ['is']),
    "what've": Tuple2(['what'], ['have']),
    "where'd": Tuple2(['where'], ['did', 'would']),
    "where'll": Tuple2(['where'], ['will', 'shall']),
    "where's": Tuple2(['where'], ['is']),
    "who'd": Tuple2(['who'], ['did', 'would']),
    "who'll": Tuple2(['who'], ['will', 'shall']),
    "who's": Tuple2(['who'], ['is']),
    "won't": Tuple2(['will'], ['not']),
    "would've": Tuple2(['would'], ['have']),
    "wouldn't": Tuple2(['would'], ['not']),
    "you'd": Tuple2(['you'], ['had', 'would']),
    "you'll": Tuple2(['you'], ['will', 'shall']),
    "you're": Tuple2(['you'], ['are']),
    "you've": Tuple2(['you'], ['have']),
    "can't": Tuple2(['can'], ['not']),
    "that'd": Tuple2(['that'], ['had', 'would']),
    "gonna": Tuple2(['going'], ['to']),
    "gotta": Tuple2(['got'], ['to']),
    "wanna": Tuple2(['want'], ['to']),
    "oughta": Tuple2(['ought'], ['to']),
    "i'd": Tuple2(['i'], ['had', 'would']),
    "i'll": Tuple2(['i'], ['will', 'shall']),
    "i'm": Tuple2(['i'], ['am']),
    "i've": Tuple2(['i'], ['have']),
    "let's": Tuple2(['let'], ['us']),
    "when'd": Tuple2(['when'], ['did', 'would']),
    "when'll": Tuple2(['when'], ['will', 'shall']),
    "when's": Tuple2(['when'], ['is']),
    "why'd": Tuple2(['why'], ['did', 'would']),
    "why'll": Tuple2(['why'], ['will', 'shall']),
    "why's": Tuple2(['why'], ['is']),
  };
  Tuple2<List<String>, List<String>> contract(String text) =>
      _contractions[text] ?? Tuple2([text], []);
}
